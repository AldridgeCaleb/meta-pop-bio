[{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Getting started with the metapopbio package","text":"metapopbio package inspired complements functionalities popbio package. Users can construct analyze projection matrix models metapopulations classified age stage located distinct patches. functionality date largely based Hunter Caswell (2005) construct analyze spatial matrix population models using vec-permutation matrix. model extends Leslie matrix (Leslie 1945) include dispersal rates patches. analogous approach taken Lebreton (1996) called “renewal equation approach.” Current plans include support classic metapopulation models Gotelli (1991; 2008) others, .e., dfdt=pi(1−f)−pef\\frac{df}{dt}=p_{}(1-f)-p_{e}f, dfdt=pi(1−f)−ef(1−f)\\frac{df}{dt}=p_{}(1-f)-ef(1-f), dfdt=(1−f)−pef\\frac{df}{dt}=(1-f)-p_{e}f, dfdt=(1−f)−ef(1−f)\\frac{df}{dt}=(1-f)-ef(1-f), hyperstate matrix models (Roth Caswell 2016). Additionally, Hanski’s (1994) incidence function $J_{}=\\frac{1}{1+\\Bigl(1+\\bigl[\\frac{y'}{S_{}}\\bigr]^2\\Bigr)\\frac{e}{A_{}^x}}$ metapopulation version Susceptible–Infected–Recovered model (SIR model), also referred patch model, also considered. suggestions can submitted email caleb..aldridge@gmail.com issue package’s GitHub repository (https://github.com/AldridgeCaleb/meta-pop-bio/issues).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Getting started with the metapopbio package","text":"following two examples come Hunter Caswell (2005) using peregrine falcon (Falco peregrinus) data Wootton Bell (1992) black-headed gull (Larus ridibundus) data Lebreton (1996).","code":""},{"path":[]},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"patches-stages-and-grouping","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"1. Patches, stages, and grouping","title":"Getting started with the metapopbio package","text":"First, define number patches (discrete locations) stages (age, class, size). example two “patches”, Northern California Southern California, two life-stages, juvenile adult. also group project stages within patches1.","code":"n_patches <- 2 n_stages <- 2 group_by <- \"patches\""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"construct-vec-permutation-matrix","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"2. Construct vec-permutation matrix","title":"Getting started with the metapopbio package","text":"Next, construct vec-permutation matrix. Essentially, vec-permutation matrix helps us relate demographic dispersal parameters populations patches projected considering births, immigration, deaths, emigration (BIDE) recruitment, immigration, survival, emigration (RISE). metapopbio::vec.perm function helps us easily construct vec-permutation matrix.","code":"(P <-   metapopbio::vec.perm(n_stages = n_stages,            n_patches = n_patches,            group_by = group_by)) #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    0    1    0 #> [3,]    0    1    0    0 #> [4,]    0    0    0    1"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"demographic-parameters-for-each-patch","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"3. Demographic parameters for each patch","title":"Getting started with the metapopbio package","text":"now specify transition probabilities one stage next (survival s recruitment r). Numbers object names indicate patch stage. adults assumed reproduce. Northern first. Now Southern.","code":"# Northern f11 <- 0.00  f12 <- 0.2556 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.1908   s21 <- 0.72 s22 <- 0.77"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"a--structure-demographic-parameters","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"4a. Structure demographic parameters","title":"Getting started with the metapopbio package","text":"Now construct demographic (Leslise-style) matrices patches. just placing demographic parameters ordered matrices analysis projecting.","code":"# Northern (B1x <-   matrix(c(f11, f12, s11, s12),          nrow = n_stages,          ncol = n_stages,          byrow = TRUE)) #>      [,1]   [,2] #> [1,] 0.00 0.2556 #> [2,] 0.72 0.7700 # Southern (B2x <-   matrix(c(f21, f22, s21, s22),          nrow = n_stages,          ncol = n_stages,          byrow = TRUE)) #>      [,1]   [,2] #> [1,] 0.00 0.1908 #> [2,] 0.72 0.7700"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"b--construct-block-diagonal-matrix","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"4b. Construct block diagonal matrix","title":"Getting started with the metapopbio package","text":"Along vec-permutation matrix, spatial matrix population models use matrix matrices analysis projection population demographics movement. accomplish using metapopbio::blk.diag function.","code":"(BB <- metapopbio::blk.diag(list(B1x, B2x))) #>      [,1]   [,2] [,3]   [,4] #> [1,] 0.00 0.2556 0.00 0.0000 #> [2,] 0.72 0.7700 0.00 0.0000 #> [3,] 0.00 0.0000 0.00 0.1908 #> [4,] 0.00 0.0000 0.72 0.7700"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"structure-movement-parameters","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"5. Structure movement parameters","title":"Getting started with the metapopbio package","text":"Similar , construct movement dispersal matrices stages. just placing movement parameters ordered matrices analysis projecting. assume juveniles disperse, therefore identity matrix specified adult movement.","code":"# Juveniles dx1 <- 0.27  dx2 <- 1 - dx1 (Mx1 <- matrix(c(dx2, dx1, dx1, dx2),               nrow = n_patches,               ncol = n_patches,               byrow = TRUE)) #>      [,1] [,2] #> [1,] 0.73 0.27 #> [2,] 0.27 0.73 # Adults (Mx2 <- diag(nrow = n_patches)) #>      [,1] [,2] #> [1,]    1    0 #> [2,]    0    1 # Block diagonal matrix (MM <- metapopbio::blk.diag(list(Mx1, Mx2))) #>      [,1] [,2] [,3] [,4] #> [1,] 0.73 0.27    0    0 #> [2,] 0.27 0.73    0    0 #> [3,] 0.00 0.00    1    0 #> [4,] 0.00 0.00    0    1"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"construct-projection-matrix","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"6. Construct projection matrix","title":"Getting started with the metapopbio package","text":"Now can use vec-permutation matrix block diagonal matrices construct population projection matrix. accomplished matrix multiplication. order matrices important (see Hunter Caswell 2005 function documentation detail), metapopbio::spmm.project.matrix function makes much convenient reduces probability calculation errors. ’s needed specify grouping (structure) projection (stages within patches ) order type demographic movement / dispersal processes (, dispersal demographics), supply matrices constructed (P, BB, MM).","code":"group_by <- \"patches\" lh_order <- \"move\" (A <-   metapopbio::spmm.project.matrix(     P = P,     BB = BB,     MM = MM,     group_by = group_by,     lh_order = lh_order   )) #>        [,1]   [,2]   [,3]   [,4] #> [1,] 0.0000 0.2556 0.0000 0.0000 #> [2,] 0.5256 0.7700 0.1944 0.0000 #> [3,] 0.0000 0.0000 0.0000 0.1908 #> [4,] 0.1944 0.0000 0.5256 0.7700"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"project","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"7. Project","title":"Getting started with the metapopbio package","text":"Now can project populations future time steps. First, indicate starting, initial, current sizes stage patch, vice versa grouping stages. added step comment vector ensures projection calculations correct. numbers n retrieved Table 1 Wootton Bell (1992). Now indicate number time steps like project. , finally can project stages within patches using metapopbio::spmm.project function.","code":"n <- c(   60, 19,  # Northern patch adults then juveniles   29, 20   # Southern patch adults then juveniles ) comment(n) <- \"patches\"  # vector attr for group_by n_timesteps <- 100 head(   projs <-     metapopbio::spmm.project(       n = n,       A = A,       n_timesteps = n_timesteps,       n_stages = n_stages,       n_patches = n_patches     ) ) #> [1] \"Deterministic spatial matrix model projections for patches structured population vector and movement then demography A projection matrix. The arg mod_move is currently ignored; please modify manually.\" #>       1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [1,] 60  4 13 10  9  9  8  7  7  6  6  5  5  4  4  3  3  2  2  2  1  1  1  1  0 #> [2,] 19 51 41 39 36 33 31 29 26 24 22 20 18 16 14 13 11 10  8  7  6  5  4  3  2 #> [3,] 29  3  8  6  6  5  5  4  4  4  3  3  2  2  2  2  1  1  1  1  1  0  0  0  0 #> [4,] 20 42 34 32 29 27 25 23 21 19 17 15 14 12 11 10  9  8  7  6  5  4  3  2  1 #>      26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #> [1,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [2,]  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [3,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [4,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>      51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 #> [1,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [2,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [3,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [4,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>      76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 #> [1,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [2,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [3,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [4,]  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>      100 #> [1,]   0 #> [2,]   0 #> [3,]   0 #> [4,]   0"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"plotting","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"8. Plotting","title":"Getting started with the metapopbio package","text":"","code":"stage_names <- c(\"Juv.\", \"Adults\") patch_names <- c(\"North\", \"South\") metapopbio::spmm.plot(   projections = projs,   ylabs = \"Abundance\",   xlabs = \"Years\",   stage_names = stage_names,   patch_names = patch_names )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"sensitivity-and-elasticity-analyses","dir":"Articles","previous_headings":"Examples > The peregrine falcon","what":"9. Sensitivity and elasticity analyses","title":"Getting started with the metapopbio package","text":"","code":"metapopbio::spmm.project.matrix.sens(A) #>            [,1]      [,2]       [,3]      [,4] #> [1,] 0.10622465 0.3920347 0.06232833 0.3081536 #> [2,] 0.15665059 0.5781376 0.09191624 0.4544372 #> [3,] 0.08349644 0.3081536 0.04899234 0.2422199 #> [4,] 0.09191624 0.3392278 0.05393274 0.2666454 metapopbio::spmm.eig.lambda(A) #> $eig #> eigen() decomposition #> $values #> [1]  0.94332217  0.85335264 -0.17332217 -0.08335264 #>  #> $vectors #>           [,1]       [,2]       [,3]       [,4] #> [1,] 0.2068106 -0.1472176 -0.6920115  0.5741311 #> [2,] 0.7632592 -0.4915044  0.4692525 -0.1872275 #> [3,] 0.1213481  0.1872911 -0.4060444 -0.7304128 #> [4,] 0.5999495  0.8376589  0.3688496  0.3190872 #>  #>  #> $lambda #> [1] 0.9433222 #>  #> $v #> [1] 0.2068106 0.7632592 0.1213481 0.5999495 #>  #> $eig_t #> eigen() decomposition #> $values #> [1]  0.94332217  0.85335264 -0.17332217 -0.08335264 #>  #> $vectors #>            [,1]       [,2]       [,3]       [,4] #> [1,] -0.4692525 -0.1872275 -0.7632592 -0.4915044 #> [2,] -0.6920115 -0.5741311  0.2068106  0.1472176 #> [3,] -0.3688496  0.3190872 -0.5999495  0.8376589 #> [4,] -0.4060444  0.7304128  0.1213481 -0.1872911 #>  #>  #> $w #> [1] -0.4692525 -0.6920115 -0.3688496 -0.4060444 metapopbio::spmm.demo.sens(BB, A, P, MM) #>            [,1]      [,2]       [,3]      [,4] #> [1,] 0.09437264 0.3920347 0.07418034 0.3081536 #> [2,] 0.13917231 0.5781376 0.10939451 0.4544372 #> [3,] 0.07418034 0.3081536 0.05830845 0.2422199 #> [4,] 0.08166069 0.3392278 0.06418828 0.2666454 metapopbio::spmm.demo.elas(BB, A, P, MM) #>           [,1]      [,2]       [,3]       [,4] #> [1,] 0.0000000 0.1062246 0.00000000 0.00000000 #> [2,] 0.1062246 0.4719130 0.00000000 0.00000000 #> [3,] 0.0000000 0.0000000 0.00000000 0.04899234 #> [4,] 0.0000000 0.0000000 0.04899234 0.21765307 metapopbio::spmm.move.sens(MM, A, P, BB) #>            [,1]       [,2]      [,3]      [,4] #> [1,] 0.11278842 0.06617969 0.4162591 0.3271948 #> [2,] 0.06617969 0.03883157 0.2442440 0.1919847 #> [3,] 0.14777197 0.08670662 0.5453700 0.4286807 #> [4,] 0.08670662 0.05087594 0.3200011 0.2515325 metapopbio::spmm.move.elas(MM, A, P, BB) #>            [,1]       [,2]      [,3]      [,4] #> [1,] 0.08728253 0.01894211 0.0000000 0.0000000 #> [2,] 0.01894211 0.03005023 0.0000000 0.0000000 #> [3,] 0.00000000 0.00000000 0.5781376 0.0000000 #> [4,] 0.00000000 0.00000000 0.0000000 0.2666454"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"the-black-headed-gull","dir":"Articles","previous_headings":"Examples","what":"The black-headed gull","title":"Getting started with the metapopbio package","text":"Fewer comments provided example noted grouping (structure n) stages example. life-cycle order remains , .e., movement demographics (juveniles assumed disperse).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"patches-stages-and-grouping-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"1. Patches, stages, and grouping","title":"Getting started with the metapopbio package","text":"First, define number patches stages (age, class, size). example two “patches” five life-stages. also group project patches within stages.","code":"n_patches <- 2 n_stages <- 5 group_by <- \"stages\""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"construct-vec-permutation-matrix-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"2. Construct vec-permutation matrix","title":"Getting started with the metapopbio package","text":"Next, construct vec-permutation matrix.","code":"(P <-   metapopbio::vec.perm(n_stages = n_stages,            n_patches = n_patches,            group_by = group_by)) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    0    0    0    0    0    0    0    0     0 #>  [2,]    0    0    0    0    0    1    0    0    0     0 #>  [3,]    0    1    0    0    0    0    0    0    0     0 #>  [4,]    0    0    0    0    0    0    1    0    0     0 #>  [5,]    0    0    1    0    0    0    0    0    0     0 #>  [6,]    0    0    0    0    0    0    0    1    0     0 #>  [7,]    0    0    0    1    0    0    0    0    0     0 #>  [8,]    0    0    0    0    0    0    0    0    1     0 #>  [9,]    0    0    0    0    1    0    0    0    0     0 #> [10,]    0    0    0    0    0    0    0    0    0     1"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"define-and-structure-demographic-parameters","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"3. Define and structure Demographic parameters","title":"Getting started with the metapopbio package","text":"now specify transition probabilities one stage next. adults assumed reproduce differential among adult stages. specify demographic parameters structure (Leslie-style) matrices patch simultaneously.","code":"B1x <- matrix(c(0.000, 0.096, 0.160, 0.224, 0.320,                 0.800, 0.000, 0.000, 0.000, 0.000,                 0.000, 0.820, 0.000, 0.000, 0.000,                 0.000, 0.000, 0.820, 0.000, 0.000,                 0.000, 0.000, 0.000, 0.820, 0.820),               nrow = n_stages, ncol = n_stages, byrow = TRUE) B2x <- matrix(c(0.000, 0.100, 0.160, 0.200, 0.200,                 0.800, 0.000, 0.000, 0.000, 0.000,                 0.000, 0.820, 0.000, 0.000, 0.000,                 0.000, 0.000, 0.820, 0.000, 0.000,                 0.000, 0.000, 0.000, 0.820, 0.820),               nrow = n_stages, ncol = n_stages, byrow = TRUE)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"construct-block-diagonal-matrix","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"4. Construct block diagonal matrix","title":"Getting started with the metapopbio package","text":"Along vec-permutation matrix, spatial matrix population models use matrix matrices analysis projection population demographics movement. accomplish using metapopbio::blk.diag function.","code":"(BB <- metapopbio::blk.diag(list(B1x, B2x))) #>       [,1]  [,2] [,3]  [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]  0.0 0.096 0.16 0.224 0.32  0.0 0.00 0.00 0.00  0.00 #>  [2,]  0.8 0.000 0.00 0.000 0.00  0.0 0.00 0.00 0.00  0.00 #>  [3,]  0.0 0.820 0.00 0.000 0.00  0.0 0.00 0.00 0.00  0.00 #>  [4,]  0.0 0.000 0.82 0.000 0.00  0.0 0.00 0.00 0.00  0.00 #>  [5,]  0.0 0.000 0.00 0.820 0.82  0.0 0.00 0.00 0.00  0.00 #>  [6,]  0.0 0.000 0.00 0.000 0.00  0.0 0.10 0.16 0.20  0.20 #>  [7,]  0.0 0.000 0.00 0.000 0.00  0.8 0.00 0.00 0.00  0.00 #>  [8,]  0.0 0.000 0.00 0.000 0.00  0.0 0.82 0.00 0.00  0.00 #>  [9,]  0.0 0.000 0.00 0.000 0.00  0.0 0.00 0.82 0.00  0.00 #> [10,]  0.0 0.000 0.00 0.000 0.00  0.0 0.00 0.00 0.82  0.82"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"structure-movement-parameters-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"5. Structure movement parameters","title":"Getting started with the metapopbio package","text":"Similar , construct movement dispersal matrices stages. just placing movement parameters ordered matrices analysis projecting. assume juveniles disperse, therefore identity matrix specified adult movement.","code":"# Juveniles Mx1 <- matrix(c(0.75, 0.375, 0.25, 0.625),               nrow = n_patches, ncol = n_patches, byrow = TRUE) # Adults Mx5 <- Mx4 <- Mx3 <- Mx2 <-   diag(nrow = n_patches)  # Block diagonal matrix (MM <- metapopbio::blk.diag(list(Mx1, Mx2, Mx3, Mx4, Mx5))) #>       [,1]  [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,] 0.75 0.375    0    0    0    0    0    0    0     0 #>  [2,] 0.25 0.625    0    0    0    0    0    0    0     0 #>  [3,] 0.00 0.000    1    0    0    0    0    0    0     0 #>  [4,] 0.00 0.000    0    1    0    0    0    0    0     0 #>  [5,] 0.00 0.000    0    0    1    0    0    0    0     0 #>  [6,] 0.00 0.000    0    0    0    1    0    0    0     0 #>  [7,] 0.00 0.000    0    0    0    0    1    0    0     0 #>  [8,] 0.00 0.000    0    0    0    0    0    1    0     0 #>  [9,] 0.00 0.000    0    0    0    0    0    0    1     0 #> [10,] 0.00 0.000    0    0    0    0    0    0    0     1"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"construct-projection-matrix-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"6. Construct projection matrix","title":"Getting started with the metapopbio package","text":"Now can use vec-permutation matrix block diagonal matrices construct population projection matrix. accomplished matrix multiplication. order matrices important (see Hunter Caswell 2005 function documentation detail), metapopbio::spmm.project.matrix function makes much convenient reduces probability calculation errors. ’s needed specify grouping (structure) projection (stages within patches ) order type demographic movement / dispersal processes (, dispersal demographics), supply matrices constructed (P, BB, MM).","code":"group_by <- \"stages\" lh_order <- \"move\" (A <-   metapopbio::spmm.project.matrix(     P = P,     BB = BB,     MM = MM,     group_by = group_by,     lh_order = lh_order   )) #>       [,1] [,2]  [,3] [,4] [,5] [,6]  [,7] [,8] [,9] [,10] #>  [1,]  0.0  0.0 0.096 0.00 0.16 0.00 0.224 0.00 0.32  0.00 #>  [2,]  0.0  0.0 0.000 0.10 0.00 0.16 0.000 0.20 0.00  0.20 #>  [3,]  0.6  0.3 0.000 0.00 0.00 0.00 0.000 0.00 0.00  0.00 #>  [4,]  0.2  0.5 0.000 0.00 0.00 0.00 0.000 0.00 0.00  0.00 #>  [5,]  0.0  0.0 0.820 0.00 0.00 0.00 0.000 0.00 0.00  0.00 #>  [6,]  0.0  0.0 0.000 0.82 0.00 0.00 0.000 0.00 0.00  0.00 #>  [7,]  0.0  0.0 0.000 0.00 0.82 0.00 0.000 0.00 0.00  0.00 #>  [8,]  0.0  0.0 0.000 0.00 0.00 0.82 0.000 0.00 0.00  0.00 #>  [9,]  0.0  0.0 0.000 0.00 0.00 0.00 0.820 0.00 0.82  0.00 #> [10,]  0.0  0.0 0.000 0.00 0.00 0.00 0.000 0.82 0.00  0.82"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"project-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"7. Project","title":"Getting started with the metapopbio package","text":"Now can project populations future time steps. First, indicate starting, initial, current sizes patch stage. made avilable Hunter Morris (2005) Lebreton (1996). added step comment vector ensures projection calculations correct. Now indicate number time steps like project. , finally can project stages within patches using metapopbio::spmm.project function.","code":"n <- c(   100, 90,  # stage 1   78, 77,  # stage 2   50, 48,  # stage 3   40, 36,  # stage 4   29, 28  # stage 5 ) comment(n) <- \"stages\"  # vector attr for group_by n_timesteps <- 50 head(   projs <-     metapopbio::spmm.project(       n = n,       A = A,       n_timesteps = n_timesteps,       n_stages = n_stages,       n_patches = n_patches     ) ) #> [1] \"Deterministic spatial matrix model projections for stages structured population vector and movement then demography A projection matrix. The arg mod_move is currently ignored; please modify manually.\" #>        1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #> [1,] 100 33 45 50 53 55 54 54 53 53 53 53 53 52 52 51 51 50 50 49 49 48 47 47 #> [2,]  90 28 34 35 34 32 31 30 29 28 27 26 25 24 23 23 22 22 21 21 20 19 19 19 #> [3,]  78 87 28 37 40 42 42 41 41 40 40 39 39 39 38 38 37 37 36 36 35 35 34 33 #> [4,]  77 65 20 26 27 27 27 26 25 25 24 24 23 23 22 21 21 21 21 20 20 19 19 18 #> [5,]  50 63 71 22 30 32 34 34 33 33 32 32 31 31 31 31 31 30 30 29 29 28 28 27 #> [6,]  48 63 53 16 21 22 22 22 21 20 20 19 19 18 18 18 17 17 17 17 16 16 15 15 #>      25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 #> [1,] 46 45 45 44 44 43 43 42 41 41 40 39 38 37 37 37 36 36 35 35 34 33 33 32 31 #> [2,] 18 18 17 17 16 16 16 15 15 15 14 14 14 13 13 13 12 12 12 12 12 11 11 11 11 #> [3,] 33 33 32 32 31 31 30 30 29 29 29 28 27 27 26 26 26 25 25 24 24 24 23 23 22 #> [4,] 18 18 18 17 17 16 16 16 15 15 15 15 14 14 13 13 13 13 13 13 13 12 12 12 11 #> [5,] 27 27 27 26 26 25 25 24 24 23 23 23 22 22 22 21 21 21 20 20 19 19 19 18 18 #> [6,] 14 14 14 14 13 13 13 13 13 12 12 12 12 11 11 10 10 10 10 10 10 10  9  9  9 #>      50 #> [1,] 31 #> [2,] 10 #> [3,] 21 #> [4,] 11 #> [5,] 18 #> [6,]  9"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"plotting-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"8. Plotting","title":"Getting started with the metapopbio package","text":"","code":"stage_names <- as.character(1:5) patch_names <- c(\"A\", \"B\") metapopbio::spmm.plot(   projections = projs,   ylabs = \"Abundance\",   xlabs = \"Years\",   stage_names = stage_names,   patch_names = patch_names )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"sensitivity-and-elasticity-analyses-1","dir":"Articles","previous_headings":"Examples > The black-headed gull","what":"9. Sensitivity and elasticity analyses","title":"Getting started with the metapopbio package","text":"","code":"metapopbio::spmm.project.matrix.sens(A) #> Warning in metapopbio::spmm.project.matrix.sens(A): Matrix A is poorly #> conditioned; eigenvalues may be unstable. #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.09755745 0.03894678 0.07042373 0.03909882 0.05791623 0.03215474 #>  [2,] 0.08124494 0.03243452 0.05864823 0.03256113 0.04823210 0.02677817 #>  [3,] 0.13514559 0.05395267 0.09755745 0.05416329 0.08023091 0.04454371 #>  [4,] 0.08092901 0.03230839 0.05842017 0.03243452 0.04804455 0.02667404 #>  [5,] 0.15291005 0.06104458 0.11038107 0.06128289 0.09077701 0.05039884 #>  [6,] 0.08849839 0.03533023 0.06388427 0.03546815 0.05253820 0.02916889 #>  [7,] 0.16689665 0.06662830 0.12047757 0.06688840 0.09908034 0.05500879 #>  [8,] 0.09175768 0.03663140 0.06623705 0.03677440 0.05447313 0.03024314 #>  [9,] 0.17628954 0.07037812 0.12725801 0.07065286 0.10465655 0.05810467 #> [10,] 0.09175768 0.03663140 0.06623705 0.03677440 0.05447313 0.03024314 #>             [,7]       [,8]      [,9]     [,10] #>  [1,] 0.04763011 0.02644394 0.2205523 0.1224493 #>  [2,] 0.03966592 0.02202227 0.1836739 0.1019746 #>  [3,] 0.06598163 0.03663259 0.3055294 0.1696280 #>  [4,] 0.03951167 0.02193664 0.1829597 0.1015781 #>  [5,] 0.07465471 0.04144783 0.3456903 0.1919251 #>  [6,] 0.04320724 0.02398839 0.2000721 0.1110788 #>  [7,] 0.08148333 0.04523904 0.3773104 0.2094804 #>  [8,] 0.04479851 0.02487186 0.2074405 0.1151697 #>  [9,] 0.08606919 0.04778508 0.3985453 0.2212699 #> [10,] 0.04479851 0.02487186 0.2074405 0.1151697 metapopbio::spmm.eig.lambda(A) #> Warning in metapopbio::spmm.eig.lambda(A): Matrix A is poorly conditioned; #> eigenvalues may be unstable. #> $eig #> eigen() decomposition #> $values #>  [1]  9.970859e-01+0.0000000i  8.919222e-01+0.0000000i  2.182849e-01+0.4025870i #>  [4]  2.182849e-01-0.4025870i -3.024940e-01+0.2461757i -3.024940e-01-0.2461757i #>  [7]  6.112978e-02+0.2358721i  6.112978e-02-0.2358721i -2.028494e-01+0.0000000i #> [10]  1.791285e-15+0.0000000i #>  #> $vectors #>                 [,1]           [,2]                     [,3] #>  [1,] -0.32790653+0i -0.18212972+0i  0.116056424-0.07487059i #>  [2,] -0.13090649+0i  0.22690373+0i  0.006076633+0.01670070i #>  [3,] -0.23670566+0i -0.04619989+0i -0.002241819-0.17870968i #>  [4,] -0.13141752+0i  0.08635946+0i  0.014606045-0.05728283i #>  [5,] -0.19466592+0i -0.04247446+0i -0.283215006-0.14899452i #>  [6,] -0.10807732+0i  0.07939566+0i -0.077701404-0.07188011i #>  [7,] -0.16009259+0i -0.03904943+0i -0.476243342+0.31863815i #>  [8,] -0.08888242+0i  0.07299341+0i -0.179460166+0.06096001i #>  [9,] -0.74131229+0i -0.44521053+0i  0.649010676+0.00000000i #> [10,] -0.41157200+0i  0.83221273+0i  0.207333032+0.05564490i #>                           [,4]                      [,5] #>  [1,]  0.116056424+0.07487059i  0.05022988+0.0927743125i #>  [2,]  0.006076633-0.01670070i -0.00445866-0.0004872395i #>  [3,] -0.002241819+0.17870968i  0.03257850-0.1570225501i #>  [4,]  0.014606045+0.05728283i  0.01409087-0.0490667965i #>  [5,] -0.283215006+0.14899452i -0.26151751+0.2128281605i #>  [6,] -0.077701404+0.07188011i -0.08809695+0.0613150917i #>  [7,] -0.476243342-0.31863815i  0.70892098+0.0000000000i #>  [8,] -0.179460166-0.06096001i  0.22503737+0.0169271029i #>  [9,]  0.649010676+0.00000000i -0.49411266-0.1083645061i #> [10,]  0.207333032-0.05564490i -0.15426192-0.0461969101i #>                            [,6]                      [,7] #>  [1,]  0.05022988-0.0927743125i  0.014698188+0.010441279i #>  [2,] -0.00445866+0.0004872395i -0.031370628-0.018391363i #>  [3,]  0.03257850+0.1570225501i  0.002359263+0.003122440i #>  [4,]  0.01409087+0.0490667965i -0.041358939+0.043317596i #>  [5,] -0.26151751-0.2128281605i  0.012163687-0.005049481i #>  [6,] -0.08809695-0.0613150917i  0.106195671+0.171304886i #>  [7,]  0.70892098+0.0000000000i -0.006180033-0.043888220i #>  [8,]  0.22503737-0.0169271029i  0.647709984-0.201321292i #>  [9,] -0.49411266+0.1083645061i -0.007352067+0.045138406i #> [10,] -0.15426192+0.0461969101i -0.699885399+0.000000000i #>                            [,8]            [,9]            [,10] #>  [1,]  0.014698188-0.010441279i  0.010988584+0i -5.224894e-16+0i #>  [2,] -0.031370628+0.018391363i -0.023369498+0i -3.630818e-17+0i #>  [3,]  0.002359263-0.003122440i  0.002059156+0i  1.699276e-16+0i #>  [4,] -0.041358939-0.043317596i  0.046768853+0i  1.250305e-16+0i #>  [5,]  0.012163687+0.005049481i -0.008323952+0i -2.213028e-17+0i #>  [6,]  0.106195671-0.171304886i -0.189058814+0i -1.216778e-15+0i #>  [7,] -0.006180033+0.043888220i  0.033648815+0i  1.660406e-15+0i #>  [8,]  0.647709984+0.201321292i  0.764252980+0i -7.071068e-01+0i #>  [9,] -0.007352067-0.045138406i -0.026975652+0i -1.566664e-15+0i #> [10,] -0.699885399+0.000000000i -0.612687917+0i  7.071068e-01+0i #>  #>  #> $lambda #> [1] 0.9970859 #>  #> $v #>  [1] -0.32790653 -0.13090649 -0.23670566 -0.13141752 -0.19466592 -0.10807732 #>  [7] -0.16009259 -0.08888242 -0.74131229 -0.41157200 #>  #> $eig_t #> eigen() decomposition #> $values #>  [1]  9.970859e-01+0.0000000i  8.919222e-01+0.0000000i  2.182849e-01+0.4025870i #>  [4]  2.182849e-01-0.4025870i -3.024940e-01+0.2461757i -3.024940e-01-0.2461757i #>  [7]  6.112978e-02+0.2358721i  6.112978e-02-0.2358721i -2.028494e-01+0.0000000i #> [10]  1.718711e-15+0.0000000i #>  #> $vectors #>               [,1]           [,2]                    [,3] #>  [1,] 0.2536597+0i  0.05633004+0i  0.62139103+0.00000000i #>  [2,] 0.2112455+0i -0.15794294+0i  0.29776448+0.07991527i #>  [3,] 0.3513929+0i  0.22206487+0i  0.25523002+0.40674126i #>  [4,] 0.2104240+0i -0.41498457+0i -0.08748875+0.03059607i #>  [5,] 0.3975824+0i  0.23494746+0i -0.20449932+0.23358264i #>  [6,] 0.2301052+0i -0.43212154+0i -0.07462378-0.04455451i #>  [7,] 0.4339490+0i  0.24456348+0i -0.29036465-0.03822100i #>  [8,] 0.2385797+0i -0.43920480+0i -0.05609084-0.06409096i #>  [9,] 0.4583715+0i  0.25062643+0i -0.22827625-0.15273184i #> [10,] 0.2385797+0i -0.43920480+0i -0.05609084-0.06409096i #>                          [,4]                      [,5] #>  [1,]  0.62139103+0.00000000i -0.731336362+0.000000000i #>  [2,]  0.29776448-0.07991527i -0.348229238-0.026193482i #>  [3,]  0.25523002-0.40674126i  0.367730607-0.310242367i #>  [4,] -0.08748875-0.03059607i  0.002932555+0.030541037i #>  [5,] -0.20449932-0.23358264i  0.043105002+0.224844860i #>  [6,] -0.07462378+0.04455451i  0.032216321-0.007191719i #>  [7,] -0.29036465+0.03822100i  0.059296927-0.070003443i #>  [8,] -0.05609084+0.06409096i  0.058221780+0.017435711i #>  [9,] -0.22827625+0.15273184i  0.198921369+0.043625711i #> [10,] -0.05609084+0.06409096i  0.058221780+0.017435711i #>                            [,6]                     [,7] #>  [1,] -0.731336362+0.000000000i  0.005488647-0.03369784i #>  [2,] -0.348229238+0.026193482i  0.783743606+0.00000000i #>  [3,]  0.367730607+0.310242367i -0.022666936-0.15564715i #>  [4,]  0.002932555-0.030541037i  0.109420309+0.46311484i #>  [5,]  0.043105002-0.224844860i  0.042439378-0.01417827i #>  [6,]  0.032216321+0.007191719i -0.220635858+0.06599916i #>  [7,]  0.059296927+0.070003443i  0.006171201+0.01772586i #>  [8,]  0.058221780-0.017435711i -0.188358244-0.05854553i #>  [9,]  0.198921369-0.043625711i -0.006138109+0.01230184i #> [10,]  0.058221780-0.017435711i -0.188358244-0.05854553i #>                           [,8]            [,9]            [,10] #>  [1,]  0.005488647+0.03369784i -0.025230343+0i -5.295556e-15+0i #>  [2,]  0.783743606+0.00000000i -0.859571041+0i -9.481194e-01+0i #>  [3,] -0.022666936+0.15564715i -0.134640449+0i  1.193352e-15+0i #>  [4,]  0.109420309-0.46311484i  0.429511140+0i -4.231046e-15+0i #>  [5,]  0.042439378+0.01417827i  0.036260783+0i  7.478823e-16+0i #>  [6,] -0.220635858-0.06599916i -0.001425556+0i  1.156243e-01+0i #>  [7,]  0.006171201-0.01772586i -0.004047100+0i  1.177518e-15+0i #>  [8,] -0.188358244+0.05854553i  0.168073829+0i  1.849989e-01+0i #>  [9,] -0.006138109-0.01230184i  0.007893352+0i  1.767433e-15+0i #> [10,] -0.188358244+0.05854553i  0.168073829+0i  2.312486e-01+0i #>  #>  #> $w #>  [1] 0.2536597 0.2112455 0.3513929 0.2104240 0.3975824 0.2301052 0.4339490 #>  [8] 0.2385797 0.4583715 0.2385797 metapopbio::spmm.demo.sens(BB, A, P, MM) #> Warning in metapopbio::spmm.demo.sens(BB, A, P, MM): Matrix A is poorly #> conditioned; eigenvalues may be unstable. #>             [,1]       [,2]       [,3]       [,4]      [,5]       [,6] #>  [1,] 0.08777313 0.07042373 0.05791623 0.04763011 0.2205523 0.04873110 #>  [2,] 0.12159144 0.09755745 0.08023091 0.06598163 0.3055294 0.06750682 #>  [3,] 0.13757425 0.11038107 0.09077701 0.07465471 0.3456903 0.07638038 #>  [4,] 0.15015810 0.12047757 0.09908034 0.08148333 0.3773104 0.08336685 #>  [5,] 0.15860895 0.12725801 0.10465655 0.08606919 0.3985453 0.08805871 #>  [6,] 0.07309665 0.05864823 0.04823210 0.03966592 0.1836739 0.04058281 #>  [7,] 0.07281240 0.05842017 0.04804455 0.03951167 0.1829597 0.04042500 #>  [8,] 0.07962263 0.06388427 0.05253820 0.04320724 0.2000721 0.04420599 #>  [9,] 0.08255504 0.06623705 0.05447313 0.04479851 0.2074405 0.04583405 #> [10,] 0.08255504 0.06623705 0.05447313 0.04479851 0.2074405 0.04583405 #>             [,7]       [,8]       [,9]     [,10] #>  [1,] 0.03909882 0.03215474 0.02644394 0.1224493 #>  [2,] 0.05416329 0.04454371 0.03663259 0.1696280 #>  [3,] 0.06128289 0.05039884 0.04144783 0.1919251 #>  [4,] 0.06688840 0.05500879 0.04523904 0.2094804 #>  [5,] 0.07065286 0.05810467 0.04778508 0.2212699 #>  [6,] 0.03256113 0.02677817 0.02202227 0.1019746 #>  [7,] 0.03243452 0.02667404 0.02193664 0.1015781 #>  [8,] 0.03546815 0.02916889 0.02398839 0.1110788 #>  [9,] 0.03677440 0.03024314 0.02487186 0.1151697 #> [10,] 0.03677440 0.03024314 0.02487186 0.1151697 metapopbio::spmm.demo.elas(BB, A, P, MM) #> Warning in spmm.demo.sens(BB, A, P, MM): Matrix A is poorly conditioned; #> eigenvalues may be unstable. #>             [,1]        [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.00000000 0.006780437 0.00929368 0.01070033 0.07078301 0.00000000 #>  [2,] 0.09755745 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [3,] 0.00000000 0.090777014 0.00000000 0.00000000 0.00000000 0.00000000 #>  [4,] 0.00000000 0.000000000 0.08148333 0.00000000 0.00000000 0.00000000 #>  [5,] 0.00000000 0.000000000 0.00000000 0.07078301 0.32776228 0.00000000 #>  [6,] 0.00000000 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [7,] 0.00000000 0.000000000 0.00000000 0.00000000 0.00000000 0.03243452 #>  [8,] 0.00000000 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [9,] 0.00000000 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 #> [10,] 0.00000000 0.000000000 0.00000000 0.00000000 0.00000000 0.00000000 #>             [,7]        [,8]        [,9]      [,10] #>  [1,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [2,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [3,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [4,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [5,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [6,] 0.00326563 0.004297029 0.004417327 0.02045453 #>  [7,] 0.00000000 0.000000000 0.000000000 0.00000000 #>  [8,] 0.02916889 0.000000000 0.000000000 0.00000000 #>  [9,] 0.00000000 0.024871858 0.000000000 0.00000000 #> [10,] 0.00000000 0.000000000 0.020454531 0.09471516 metapopbio::spmm.move.sens(MM, A, P, BB) #> Warning in metapopbio::spmm.move.sens(MM, A, P, BB): Matrix A is poorly #> conditioned; eigenvalues may be unstable. #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.10811647 0.04316214 0.07804596 0.04333064 0.06418473 0.03563497 #>  [2,] 0.06474321 0.02584671 0.04673613 0.02594761 0.03843564 0.02133923 #>  [3,] 0.13475175 0.05379545 0.09727315 0.05400545 0.07999711 0.04441390 #>  [4,] 0.08069317 0.03221424 0.05824992 0.03234000 0.04790454 0.02659630 #>  [5,] 0.15246445 0.06086669 0.11005940 0.06110430 0.09051248 0.05025197 #>  [6,] 0.08824049 0.03522727 0.06369810 0.03536479 0.05238510 0.02908388 #>  [7,] 0.16641029 0.06643413 0.12012648 0.06669348 0.09879161 0.05484849 #>  [8,] 0.09149029 0.03652465 0.06604403 0.03666724 0.05431438 0.03015501 #>  [9,] 0.17577581 0.07017302 0.12688716 0.07044697 0.10435156 0.05793534 #> [10,] 0.09149029 0.03652465 0.06604403 0.03666724 0.05431438 0.03015501 #>             [,7]       [,8]      [,9]      [,10] #>  [1,] 0.05278530 0.02930607 0.2444235 0.13570243 #>  [2,] 0.03160934 0.01754931 0.1463677 0.08126246 #>  [3,] 0.06578935 0.03652584 0.3046390 0.16913371 #>  [4,] 0.03939653 0.02187271 0.1824265 0.10128206 #>  [5,] 0.07443715 0.04132705 0.3446829 0.19136581 #>  [6,] 0.04308133 0.02391849 0.1994890 0.11075508 #>  [7,] 0.08124588 0.04510721 0.3762108 0.20886994 #>  [8,] 0.04466796 0.02479938 0.2068360 0.11483407 #>  [9,] 0.08581837 0.04764583 0.3973839 0.22062507 #> [10,] 0.04466796 0.02479938 0.2068360 0.11483407 metapopbio::spmm.move.elas(MM, A, P, BB) #> Warning in spmm.move.sens(MM, A, P, BB): Matrix A is poorly conditioned; #> eigenvalues may be unstable. #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.08132434 0.01623311 0.00000000 0.00000000 0.00000000 0.00000000 #>  [2,] 0.01623311 0.01620141 0.00000000 0.00000000 0.00000000 0.00000000 #>  [3,] 0.00000000 0.00000000 0.09755745 0.00000000 0.00000000 0.00000000 #>  [4,] 0.00000000 0.00000000 0.00000000 0.03243452 0.00000000 0.00000000 #>  [5,] 0.00000000 0.00000000 0.00000000 0.00000000 0.09077701 0.00000000 #>  [6,] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.02916889 #>  [7,] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [8,] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [9,] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #> [10,] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>             [,7]       [,8]      [,9]     [,10] #>  [1,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [2,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [3,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [4,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [5,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [6,] 0.00000000 0.00000000 0.0000000 0.0000000 #>  [7,] 0.08148333 0.00000000 0.0000000 0.0000000 #>  [8,] 0.00000000 0.02487186 0.0000000 0.0000000 #>  [9,] 0.00000000 0.00000000 0.3985453 0.0000000 #> [10,] 0.00000000 0.00000000 0.0000000 0.1151697"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/articles/getting-started.html","id":"references","dir":"Articles","previous_headings":"Examples","what":"References","title":"Getting started with the metapopbio package","text":"Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Gotelli, N. J. (1991). Metapopulation models: rescue effect, propagate rain, core-satellite hypothesis. American Naturalist 138(3):768–776. Gotelli, N. J. (2008). Primer Ecology (4th ed.). Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Leslie, P. H. (1945). use matrices certain population mathematics. Biometrika 33:183–212. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Roth, G. Caswell, H. (2016). Hyperstate matrix models: extending demographic state spaces higher dimensions. Methods Ecology Evolution 7:1438–1450. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307-–321.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Caleb . Aldrdge. Author, maintainer.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aldridge, C. . (2023). metapopbio: Construction analysis metapopulation models. version 0.0.1. Columbus, Mississippi. http://github.com/AldridgeCaleb/meta-pop-bio","code":"@Manual{,   title = {{metapopbio}: {C}onstruction and analysis of metapopulation models},   author = {Caleb A. Aldridge},   address = {Columbus, Mississippi},   note = {version 0.0.1},   year = {2023},   url = {https://github.com/AldridgeCaleb/meta-pop-bio}, }"},{"path":[]},{"path":[]},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"package-description","dir":"","previous_headings":"","what":"Package Description","title":"Construction and Analysis of Metapopulation Models","text":"metapopbio package inspired complements fuctionalities popbio package. Users can construct analyze projection matrix models metapopulations classified age stage located distinct patches. functionality date largely based Hunter Caswell (2005) construct analyze spatial matrix population models using vec-permutation matrix. model extends Leslie matrix (Leslie 1945) include dispersal rates patches. analogous approach taken Lebreton (1996) called “renewal equation approach.”","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Construction and Analysis of Metapopulation Models","text":"","code":"install.packages(\"devtools\") devtools::install_github(\"AldridgeCaleb/meta-pop-bio\") library(\"metapopbio\")"},{"path":[]},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Construction and Analysis of Metapopulation Models","text":"Please report issues bugs https://github.com/AldridgeCaleb/meta-pop-bio/issues email caleb..aldridge gmail.com","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Construction and Analysis of Metapopulation Models","text":"Current plans include support classic metapopulation models Gotelli (1991; 2008) others (e.g., mainland–island model, internal colonization, rescue effect) hyperstate matrix models (Roth Caswell 2016). Additionally, Hanski’s (1994) incidence function metapopulation version Susceptible–Infected–Recovered model (SIR model), also referred patch model, also considered. suggestions can submitted email caleb..aldridge gmail.com issue package’s GitHub repository (https://github.com/AldridgeCaleb/meta-pop-bio/issues).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Construction and Analysis of Metapopulation Models","text":"Contributions code welcome. Please contact Caleb . Aldridge (caleb..aldridge gmail.com) brief summary potential contributions.","code":""},{"path":[]},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"authors","dir":"","previous_headings":"Authors and acknowledgment","what":"Authors","title":"Construction and Analysis of Metapopulation Models","text":"Caleb . Aldridge (caleb..aldridge gmail.com)","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"maintainer","dir":"","previous_headings":"Authors and acknowledgment","what":"Maintainer","title":"Construction and Analysis of Metapopulation Models","text":"Caleb . Aldridge (caleb..aldridge gmail.com)","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"acknowledgements","dir":"","previous_headings":"Authors and acknowledgment","what":"Acknowledgements","title":"Construction and Analysis of Metapopulation Models","text":"Pending.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Construction and Analysis of Metapopulation Models","text":"GNU General Public License v3.0 (GPL-3.0) free software license allows users freely use, modify, distribute software. key stipulation derivative work must also distributed GPL-3.0 license. ensures modifications remain open-source. license also provides explicit patent grants protections tivoization, practice restricts users modifying running software devices. See full license description .","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"project-status","dir":"","previous_headings":"","what":"Project status","title":"Construction and Analysis of Metapopulation Models","text":"progress","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Construction and Analysis of Metapopulation Models","text":"Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Gotelli, N. J. (1991). Metapopulation models: rescue effect, propagule rain, core-satellite hypothesis. American Naturalist 138(3):768–776. Gotelli, N. J. (2008). Primer Ecology (4th ed.). Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Leslie, P. H. (1945). use matrices certain population mathematics. Biometrika 33:183–212. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Roth, G. Caswell, H. (2016). Hyperstate matrix models: extending demographic state spaces higher dimensions. Methods Ecology Evolution 7:1438–1450. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/auto.spmm.html","id":null,"dir":"Reference","previous_headings":"","what":"automatically construct and analyze an spmm — auto.spmm","title":"automatically construct and analyze an spmm — auto.spmm","text":"function automates construction analysis spatial population matrix model, construction vec-permutation matrix plotting. user provides `path` `filename` spmm formatted Excel Workbook (.xlsx). Future plans include \"report\" option include RMarkdown (.Rmd) Word Document (.docx) outputs. Additionally, exploring ability \"update\" spmm convenience function.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/auto.spmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"automatically construct and analyze an spmm — auto.spmm","text":"","code":"auto.spmm(path, filename, plot = FALSE, ylabs = NA, xlabs = NA, ...)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/auto.spmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"automatically construct and analyze an spmm — auto.spmm","text":"path path xlsx workbook filename name xlsx workbook plot optional; output plots `auto.spmm`? ylabs optional; labels y-axis labels xlabs optional; labels x-axis labels ... optional; additional arguments passed `spmm.project`","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/auto.spmm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"automatically construct and analyze an spmm — auto.spmm","text":"Workbook follow template found extdata. Objects can assigned list using unpacking / destructuring assignment \" zeallot package. (metapopbio currently lists zeallot dependency).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/auto.spmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"automatically construct and analyze an spmm — auto.spmm","text":"Schauberger P, Walker (2022). openxlsx: Read, Write Edit xlsx Files. https://ycphs.github.io/openxlsx/index.html, https://github.com/ycphs/openxlsx.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":null,"dir":"Reference","previous_headings":"","what":"block diagonal matrix construction — blk.diag","title":"block diagonal matrix construction — blk.diag","text":"Constructs block matrix matrices. Matrices types spatial matrix population models described Hunter Caswell (2005) Lebreton (1996), include demographic B dispersal M block diagonal matrices constructed, BB MM demographic dispersal respectively.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"block diagonal matrix construction — blk.diag","text":"","code":"blk.diag(matlist)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"block diagonal matrix construction — blk.diag","text":"matlist List matrices, separated commas, constructing block diagonal matrix.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"block diagonal matrix construction — blk.diag","text":"demographic block matrix BB consists s × s number demographic matrices (one patch). demographic block matrix MM consists p × p number stage dispersal matrices (one stage). Please refer Hunter Caswell (2005) details.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"block diagonal matrix construction — blk.diag","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/blk.diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"block diagonal matrix construction — blk.diag","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from # `vec.perm`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Dispersal parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Dispersal matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no dispersal by adults # Dispersal block matrix construction MM <- blk.diag(list(Mx1, Mx2))"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"density dependent exponential growth — dd.growth.exponential","title":"density dependent exponential growth — dd.growth.exponential","text":"Modifies growth population time *t + 1* population size time *t*.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"density dependent exponential growth — dd.growth.exponential","text":"","code":"dd.growth.exponential(N, r, K)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"density dependent exponential growth — dd.growth.exponential","text":"N Number individuals biomass time t. Can () vector structure according group_by. r Intrinsic rate increase baseline growth rate. K Carrying capacity. Can vector stage can vary patches.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.exponential.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"density dependent exponential growth — dd.growth.exponential","text":"produces similar results `dd.growth.logistic`.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.general.html","id":null,"dir":"Reference","previous_headings":"","what":"density dependent growth generalized — dd.growth.general","title":"density dependent growth generalized — dd.growth.general","text":"Modifies growth population time *t + 1* population size time *t*.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"density dependent growth generalized — dd.growth.general","text":"","code":"dd.growth.general(N, r, K, theta = 1)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"density dependent growth generalized — dd.growth.general","text":"N Number individuals biomass time t. Can () vector structure according group_by. r Intrinsic rate increase baseline growth rate. K Carrying capacity. Can vector stage can vary patches. theta Shape parameter modifies growth form *t* *t+1*. *theta* = 1, takes logitic shape (Beverton-Holt-like); > 1, becomes concave; < 1, becomes convex; *theta* = 0, takes density-dependent exponential shape (Ricker-like).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.general.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"density dependent growth generalized — dd.growth.general","text":"produces similar results `dd.growth.logistic`.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Density dependent logistic growth — dd.growth.logistic","title":"Density dependent logistic growth — dd.growth.logistic","text":"Adjusts per capita fecundity based current total population size *t* relative carrying capacity using theta-logistic-like formulation. Allows enhancement low density compensation high density.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density dependent logistic growth — dd.growth.logistic","text":"","code":"dd.growth.logistic(N, B, K, beta = 0, theta = 1)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density dependent logistic growth — dd.growth.logistic","text":"N Numeric vector. Abundance biomass time *t* stage group. B Numeric vector. Baseline average per capita fecundity rates stage. Typically, mature stages nonzero. K Numeric scalar. Carrying capacity, representing max abundance biomass population, beyond fecundity begins decline. beta Numeric scalar. Density feedback strength. beta = 0 implies density dependence. beta > 0 enables enhanced reproduction low density. theta Numeric scalar. Shape parameter controlling steepness response. theta = 1 standard logistic; theta > 1 produces stronger decline high density.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density dependent logistic growth — dd.growth.logistic","text":"numeric vector modified per capita fecundity rates (length N), adjusted density dependence.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.growth.logistic.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Density dependent logistic growth — dd.growth.logistic","text":"theta-logistic formulation allows low-density enhancement (beta > 0), mimicking undercompensatory compensatory responses.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.BevertonHolt.html","id":null,"dir":"Reference","previous_headings":"","what":"Density-dependent Beverton-Holt recruitment function — dd.rec.BevertonHolt","title":"Density-dependent Beverton-Holt recruitment function — dd.rec.BevertonHolt","text":"Density-dependent Beverton-Holt recruitment function","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.BevertonHolt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density-dependent Beverton-Holt recruitment function — dd.rec.BevertonHolt","text":"","code":"dd.rec.BevertonHolt(N, a, b, theta = NA)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.BevertonHolt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density-dependent Beverton-Holt recruitment function — dd.rec.BevertonHolt","text":"N Number individuals biomass time t. Can () vector structure according group_by. Density-independent recruitment rate. b Rate change increased density. theta Degree depensation (Allee effect).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.BevertonHolt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Density-dependent Beverton-Holt recruitment function — dd.rec.BevertonHolt","text":"Equations expressed recruit per capita.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.Ricker.html","id":null,"dir":"Reference","previous_headings":"","what":"Density-dependent Ricker recruitment function — dd.rec.Ricker","title":"Density-dependent Ricker recruitment function — dd.rec.Ricker","text":"Density-dependent Ricker recruitment function","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.Ricker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density-dependent Ricker recruitment function — dd.rec.Ricker","text":"","code":"dd.rec.Ricker(N, a, b, theta = NA)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/dd.rec.Ricker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density-dependent Ricker recruitment function — dd.rec.Ricker","text":"N Number individuals biomass time t. Can () vector structure according group_by. Density-independent recruitment rate. b Rate change increased density. theta Degree depensation (Allee effect). Default NA. ##' @note Equations expressed recruit per capita.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/is.identity.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"TRUE/FALSE test for identity matrix — is.identity.matrix","title":"TRUE/FALSE test for identity matrix — is.identity.matrix","text":"TRUE/FALSE test identity matrix","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/is.identity.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TRUE/FALSE test for identity matrix — is.identity.matrix","text":"","code":"is.identity.matrix(mat)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/is.identity.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TRUE/FALSE test for identity matrix — is.identity.matrix","text":"mat matrix.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/is.identity.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TRUE/FALSE test for identity matrix — is.identity.matrix","text":"TRUE/FALSE","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/is.identity.matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TRUE/FALSE test for identity matrix — is.identity.matrix","text":"","code":"M <- matrix(nrow = 3) is.identity.matrix(M) #> [1] FALSE"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.ddf.params.html","id":null,"dir":"Reference","previous_headings":"","what":"define density dependence function parameters — spmm.ddf.params","title":"define density dependence function parameters — spmm.ddf.params","text":"define density dependence function parameters","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.ddf.params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"define density dependence function parameters — spmm.ddf.params","text":"","code":"spmm.ddf.params(   f_type = NA,   s_type = NA,   stages = NA,   P = NA,   BB = NA,   MM = NA,   r = NA,   K = NA )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.ddf.params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"define density dependence function parameters — spmm.ddf.params","text":"f_type Either Ricker Beverton-Holt type density dependence recruitment. s_type Currently implements logistic type density dependence survival. stages Number stages modeled. P Vec-permutation matrix. BB Block diagonal demographic matrix. MM Block diagonal movement (dispersal) matrix. r Baseline recruitment. K Carrying capacity.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":null,"dir":"Reference","previous_headings":"","what":"elasticity of demographic block matrices — spmm.demo.elas","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"Calculates sensitivity elasticity lambda changes demographic movement (dispersal) black matrices described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"","code":"spmm.demo.elas(BB, A, P, MM)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"BB block diagonal demographics matrix (see `blk.diag` function). spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details). P vec-permutation matrix (see `vec.perm` function). MM block diagonal movement matrix (see `blk.diag` function).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"matrix containing sensitivity values projection matrix . According Morris Doak (2003) sensitivity values od lambda particular matrix element \"directly proportional fraction individuals population element act times future value individual element 'creates'\" (p. 226).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"Ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.elas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"elasticity of demographic block matrices — spmm.demo.elas","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   # Calculate sensitivity of lambda to elements of block deomgraphic matrix BB BB_sens <- spmm.demo.sens(BB, A, P, MM) BB_elas <- spmm.demo.elas(BB, A, P, MM)  # Calculate sensitivity of lambda to elements of block movement matrix MM MM_sens <- spmm.move.sens(MM, A, P, BB) MM_elas <- spmm.move.elas(MM, A, P, BB)  # Calculate sensitivity of lambda to specific movement probability sens_d <- MM_sens[1, 2] + MM_sens[2, 1] - MM_sens[1, 1] - MM_sens[2, 2]"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":null,"dir":"Reference","previous_headings":"","what":"sensitivity of demographic block matrices — spmm.demo.sens","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"Calculates sensitivity elasticity lambda changes demographic movement (dispersal) black matrices described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"","code":"spmm.demo.sens(BB, A, P, MM)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"BB block diagonal demographics matrix (see `blk.diag` function). spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details). P vec-permutation matrix (see `vec.perm` function). MM block diagonal movement matrix (see `blk.diag` function).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"matrix containing sensitivity values projection matrix . According Morris Doak (2003) sensitivity values od lambda particular matrix element \"directly proportional fraction individuals population element act times future value individual element 'creates'\" (p. 226).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"Ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.demo.sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sensitivity of demographic block matrices — spmm.demo.sens","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   # Calculate sensitivity of lambda to elements of block deomgraphic matrix BB BB_sens <- spmm.demo.sens(BB, A, P, MM) BB_elas <- spmm.demo.elas(BB, A, P, MM)  # Calculate sensitivity of lambda to elements of block movement matrix MM MM_sens <- spmm.move.sens(MM, A, P, BB) MM_elas <- spmm.move.elas(MM, A, P, BB)  # Calculate sensitivity of lambda to specific movement probability sens_d <- MM_sens[1, 2] + MM_sens[2, 1] - MM_sens[1, 1] - MM_sens[2, 2]"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate lambda — spmm.eig.lambda","title":"calculate lambda — spmm.eig.lambda","text":"Calculates dominant eigenvalue (lambda) corresponding eigenvectors projection matrix (see `spmm.project.matrix`) described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate lambda — spmm.eig.lambda","text":"","code":"spmm.eig.lambda(A)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate lambda — spmm.eig.lambda","text":"spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate lambda — spmm.eig.lambda","text":"list containing `eig` = eigenvalues ; `lambda` = dominant eigenvalue; `v` = eigenvector `eig` containing max real eigenvalue; `eig_t` = eigenvalues transposed ; `w` = eigenvector `eig_t` containing max real eigenvalue.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"calculate lambda — spmm.eig.lambda","text":"Ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"calculate lambda — spmm.eig.lambda","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.eig.lambda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate lambda — spmm.eig.lambda","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from # `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   eigen_results <- spmm.eig.lambda(A)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":null,"dir":"Reference","previous_headings":"","what":"elasticity of movement (dispersal) block matrices — spmm.move.elas","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"Calculates sensitivity elasticity lambda changes demographic movement (dispersal) black matrices described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"","code":"spmm.move.elas(MM, A, P, BB)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"MM block diagonal movement matrix (see `blk.diag` function). spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details). P vec-permutation matrix (see `vec.perm` function). BB block diagonal demographics matrix (see `blk.diag` function).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"matrix containing sensitivity values projection matrix . According Morris Doak (2003) sensitivity values od lambda particular matrix element \"directly proportional fraction individuals population element act times future value individual element 'creates'\" (p. 226).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"Ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.elas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"elasticity of movement (dispersal) block matrices — spmm.move.elas","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   # Calculate sensitivity of lambda to elements of block deomgraphic matrix BB BB_sens <- spmm.demo.sens(BB, A, P, MM) BB_elas <- spmm.demo.elas(BB, A, P, MM)  # Calculate sensitivity of lambda to elements of block movement matrix MM MM_sens <- spmm.move.sens(MM, A, P, BB) MM_elas <- spmm.move.elas(MM, A, P, BB)  # Calculate sensitivity of lambda to specific movement probability sens_d <- MM_sens[1, 2] + MM_sens[2, 1] - MM_sens[1, 1] - MM_sens[2, 2]"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":null,"dir":"Reference","previous_headings":"","what":"sensitivity movement (dispersal) block matrices — spmm.move.sens","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"Calculates sensitivity elasticity lambda changes demographic movement (dispersal) black matrices described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"","code":"spmm.move.sens(MM, A, P, BB)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"MM block diagonal movement matrix (see `blk.diag` function). spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details). P vec-permutation matrix (see `vec.perm` function). BB block diagonal demographics matrix (see `blk.diag` function).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"matrix containing sensitivity values projection matrix . According Morris Doak (2003) sensitivity values od lambda particular matrix element \"directly proportional fraction individuals population element act times future value individual element 'creates'\" (p. 226).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"Ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.move.sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sensitivity movement (dispersal) block matrices — spmm.move.sens","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   # Calculate sensitivity of lambda to elements of block deomgraphic matrix BB BB_sens <- spmm.demo.sens(BB, A, P, MM) BB_elas <- spmm.demo.elas(BB, A, P, MM)  # Calculate sensitivity of lambda to elements of block movement matrix MM MM_sens <- spmm.move.sens(MM, A, P, BB) MM_elas <- spmm.move.elas(MM, A, P, BB)  # Calculate sensitivity of lambda to specific movement probability sens_d <- MM_sens[1, 2] + MM_sens[2, 1] - MM_sens[1, 1] - MM_sens[2, 2]"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plots of spatial matrix population model projections — spmm.plot","title":"plots of spatial matrix population model projections — spmm.plot","text":"Produces plots deterministic future population sizes stages s patches p. Depending structure `n`, plot frames represent patches stages lines opposite.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plots of spatial matrix population model projections — spmm.plot","text":"","code":"spmm.plot(   projections,   ylabs = NA,   xlabs = NA,   stage_names = NA,   patch_names = NA )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plots of spatial matrix population model projections — spmm.plot","text":"projections `matrix` `nrow` n_stages × n_patches `ncol` n_timesteps (see `spmm.project` detail). prerequisite steps, .e., `vec.perm`, `blk.diag`, `spmm.project.matrix`, `spmm.project`, specified correctly correspond structure `n` (expectations). ylabs Y-axis label plots. xlabs X-axis label plots. stage_names Names stages, ages, classes, etc. patch_names Names patches, units, pools, etc.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"plots of spatial matrix population model projections — spmm.plot","text":"`spmm.project` ensure structural type population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"plots of spatial matrix population model projections — spmm.plot","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plots of spatial matrix population model projections — spmm.plot","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), Ecological Modelling  # 188(2005):15--21. Data from Wootton and Bell (1992). Continues example from  # `spmm.project`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19 s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P  # Initial stages within patches (patch group_by) n <- c(   50, 22,  # Northern patch adults and juveniles   40, 17   # Southern patch adults and juveniles ) comment(n) <- \"patches\"  # vec comment attr for group_by  # Number of time steps to project into the future n_timesteps <- 50  # Project spatial matrix population model projs <- spmm.project(n, A, n_timesteps, n_stages, n_patches) #> [1] \"Deterministic spatial matrix model projections for patches structured population vector and movement then demography A projection matrix. The arg mod_move is currently ignored; please modify manually.\"  # Plot projections spmm.plot(projs)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":null,"dir":"Reference","previous_headings":"","what":"deterministic projection of spatial matrix population model — spmm.project","title":"deterministic projection of spatial matrix population model — spmm.project","text":"Produces deterministic future population sizes stages s patches p. Projections can ordered demography movement (dispersal) vice versa using population vectors arranged patches stages described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deterministic projection of spatial matrix population model — spmm.project","text":"","code":"spmm.project(   n,   A,   n_timesteps,   n_stages,   n_patches,   ddf = NA,   mod_mort = NA,   mod_rec = NA,   mod_move = NA,   P,   BB,   MM )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deterministic projection of spatial matrix population model — spmm.project","text":"n Vector stage patch starting values. structure `n` patches, vector sould order values stage within patch \"stack\" patches. structure `n` stages, vector sould order values patch within stage \"stack\" stages. spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal Movement matrix MM (see `spmm.project.matrix` details). n_timesteps number time steps future projected. n_stages number stages (rows) metapopulation state matrix N. n_patches number patches (columns) metapopulation state matrix N. ddf Density-dependent function parameters (see `?spmm.ddf.params`) mod_mort Optional modification survival rates via additive mortality. Can used increase mortality (decrease survival) across one demographic matrices. argument accepts one following forms:   - **Single numeric value**: scalar applied uniformly non-recruitment   elements across demographic matrices (.e., additive mortality everywhere).   - **Numeric vector**: vector length equal either `n_patches` `n_stages`,   depending `group_by`. value applied corresponding demographic   matrix list.   - **List matrices**: list length number demographic   matrices (`n_patches` `n_stages`), matrix matching dimensions   corresponding demographic matrix (excluding recruitment row).   allows specifying element-wise additive mortality matrix. Use single value uniform mortality, vector matrix-wise variation, list matrices full element-wise control. mod_rec Optional modification recruitment rates via additive effects. argument can specified one three forms, similar `mod_mort`:   - **Single numeric value**: scalar applied uniformly recruitment row   (top row) demographic matrices.   - **Numeric vector**: vector length equal either `n_patches` `n_stages`   (depending `group_by`), value modifies recruitment row across   entire corresponding demographic matrix.   - **List numeric vectors**: list length equal number   demographic matrices (`n_patches` `n_stages`), list element   vector length equal number columns (`ncol`) demographic   matrix. allows element-wise modification recruitment rates within   matrix. Use single value uniform recruitment modification, vector matrix-wise differences, list vectors full element-wise control across recruitment elements. mod_move Optional modification movement. specified data.frame must contain columns:     - `stage`: index stage modification applies,     - `triangle`: either `\"lower\"` `\"upper\"`, specifying half     movement matrix modify,     - ``: column index movement matrix modification applied,     - `d_perc`: proportional change (e.g., `0.5` 50     50     triangle column. applying modification, corresponding column re-normalized ensure sum 1. Note: specific patch--patch modifications using `` `` columns developed future functionality. Currently modifications currently applied equally across stages. P (optional) vec-permutation matrix – required ddf, mod_mort, mod_move given BB (optional) block diagonal demographic matrix – required ddf, mod_mort, mod_move given MM (optional) block diagonal movement (dispersal) matrix – required ddf, mod_mort, mod_move given","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"deterministic projection of spatial matrix population model — spmm.project","text":"Ensure structural lh_orders population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"deterministic projection of spatial matrix population model — spmm.project","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"deterministic projection of spatial matrix population model — spmm.project","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19 s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no Movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P = P, BB = BB, MM = MM, group_by = group_by, lh_order = lh_order)  # BB %*% t(P) %*% MM %*% P  # Initial stages within patches (patch group_by) n <- c(   50, 22,  # Northern patch juveniles (row 1, column 1) and adults (row 2, column 1)   40, 17   # Southern patch juveniles (row 1, column 2) and adults (row 2, column 2) ) comment(n) <- \"patches\"  # vec comment attr for group_by  # Number of time steps to project into the future n_timesteps <- 50  # Project spatial matrix population model projs <- spmm.project(n, A, n_timesteps, n_stages, n_patches) #> [1] \"Deterministic spatial matrix model projections for patches structured population vector and movement then demography A projection matrix. The arg mod_move is currently ignored; please modify manually.\""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"projection matrix — spmm.project.matrix","title":"projection matrix — spmm.project.matrix","text":"Constructs projection matrix given vec-permutation matrix P, demographic block diagonal matrix BB, movement (dispersal) block diagonal matrix MM described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"projection matrix — spmm.project.matrix","text":"","code":"spmm.project.matrix(   P,   BB,   MM,   group_by = c(\"patches\", \"stages\"),   lh_order = c(\"demo\", \"move\") )"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"projection matrix — spmm.project.matrix","text":"P vec-permutation matrix (see `vec.perm` function). BB block diagonal demographics matrix (see `blk.diag` function). MM block diagonal movement matrix (see `blk.diag` function). group_by structural form population vector `n` either \"patches\" \"stages\". lh_order order demographic movement (dispersal) processes.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"projection matrix — spmm.project.matrix","text":"demographic block matrix BB consists s × s number demographic matrices (one patch). demographic block matrix MM consists p × p number stage movement matrices (one stage). Please refer Hunter Caswell (2005) details.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"projection matrix — spmm.project.matrix","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"projection matrix — spmm.project.matrix","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `blk.diag`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Movement matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":null,"dir":"Reference","previous_headings":"","what":"sensitivity of projection matrix A — spmm.project.matrix.sens","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"Calculates sensitivity lambda changes projection matrix (see `spmm.project.matrix`) described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"","code":"spmm.project.matrix.sens(A)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"spatial population projection matrix constructed vec-permutation matrix P, block diagonal demographic matrix BB, block diagonal movement matrix MM (see `spmm.project.matrix` details).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"matrix containing sensitivity values projection matrix . According Morris Doak (2003) sensitivity values od lambda particular matrix element \"directly proportional fraction individuals population element act times future value individual element 'creates'\" (p. 226).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"Ensure structural lh_orders population vector `n` projection matrix `` . Otherwise, projections may produce incorrect values!","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.project.matrix.sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sensitivity of projection matrix A — spmm.project.matrix.sens","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from `spmm.project.matrix`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Movement parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Movement matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no movement by adults # Movement block matrix construction MM <- blk.diag(list(Mx1, Mx2))  # Arrangement by patches group_by <- \"patches\" # Assumed movement before demography lh_order <- \"move\"  # Projection matrix construction A <- spmm.project.matrix(P, BB, MM, group_by, lh_order)  # BB %*% t(P) %*% MM %*% P   # Calculate sensitivity of lambda to elements of projection matrix A A_sens <- spmm.project.matrix.sens(A)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":null,"dir":"Reference","previous_headings":"","what":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"Read spmm worksheet data","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"","code":"spmm.readxl(path, filename)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"path path xlsx workbook filename name xlsx workbook","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"Returns list. Objects can assigned list using unpacking / destructuring assignment \" (metapopbio currently lists zeallot dependency).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"Workbook follow template found extdata.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/spmm.readxl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"read spreadsheets from Excel Workbook (xlsx) formatted for spmm — spmm.readxl","text":"Schauberger P, Walker (2022). openxlsx: Read, Write Edit xlsx Files. https://ycphs.github.io/openxlsx/index.html, https://github.com/ycphs/openxlsx.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/unblk.diag.html","id":null,"dir":"Reference","previous_headings":"","what":"unblock a diagonal matrix — unblk.diag","title":"unblock a diagonal matrix — unblk.diag","text":"Deconstructs block matrix component matrices.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/unblk.diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unblock a diagonal matrix — unblk.diag","text":"","code":"unblk.diag(blk_matrix, dimensions)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/unblk.diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unblock a diagonal matrix — unblk.diag","text":"blk_matrix List matrices, separated commas, constructing block diagonal matrix. dimensions Number stages (n_stages) patches (n_patches), depending demographic movement (dispersal) block matrix decomposed.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/unblk.diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unblock a diagonal matrix — unblk.diag","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992). Continues example from # `vec.perm`.  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)  # Demographic parameter values # Northern f11 <- 0.00  # only adults reproduce f12 <- 0.26 s11 <- 0.72 s12 <- 0.77 # Southern f21 <- 0.00 f22 <- 0.19   s21 <- 0.72 s22 <- 0.77  # Demography matrices for patches B1x <-   matrix(c(f11, f12, s11, s12),          nrow = 2,          byrow = TRUE) B2x <-   matrix(c(f21, f22, s21, s22),          nrow = 2,          byrow = TRUE) # Demography block matrix construction BB <- blk.diag(list(B1x, B2x))  # Dispersal parameter values dx1 <- 0.27  # only juveniles disperse dx2 <- 1 - dx1 # Dispersal matrices for stages Mx1 <- matrix(c(dx2, dx1, dx1, dx2), nrow = n_patches, byrow = TRUE) Mx2 <- diag(x = 1, nrow = n_patches, ncol = n_patches)  # no dispersal by adults # Dispersal block matrix construction MM <- blk.diag(list(Mx1, Mx2))  matlist <- unblk.diag(MM, n_patches)"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":null,"dir":"Reference","previous_headings":"","what":"vec-permutation matrix — vec.perm","title":"vec-permutation matrix — vec.perm","text":"Stacks columns matrix one top covert population vector organized patches population vector organized stages vice versa. use spatial matrix population models described Hunter Caswell (2005) Lebreton (1996).","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vec-permutation matrix — vec.perm","text":"","code":"vec.perm(n_stages, n_patches, group_by = c(\"patches\", \"stages\"))"},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vec-permutation matrix — vec.perm","text":"n_stages number stages (rows) metapopulation state matrix N. n_patches number patches (columns) metapopulation state matrix N. group_by structural form population vector `n` either \"patches\" \"stages\".","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"vec-permutation matrix — vec.perm","text":"population vector n can written two ways: patches stages. modeling demography dispersal, convenient construct n patches. modeling dispersal demography, convenient construct n stages. Please refer Hunter Caswell (2005) details. convenience, argument `group_by` used properly construct vec-permutation matrix correctly.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"vec-permutation matrix — vec.perm","text":"Becker, R. ., Chambers, J. M. Wilks, . R. (1988). New S Language. Wadsworth & Brooks/Cole. Wootton, J.T., Bell, D.. (1992). metapopulation model peregrine falcon California: viability management strategies. Ecological Applications 2:307–321. Lebreton, J. D. (1996). Demographic models subdivided populations: renewal equation approach. Theoretical Population Biology 49:291–313. Caswell, H. (2001). Matrix Population Models: Construction, analysis, interpretation (2nd ed.). Sinauer Associates. Morris, W. F., Doak, D. F. (2003). Quantitative Conservation Biology: Theory practice population viability analysis. Sinauer Associates. Hunter, C. M. Caswell, H. (2005). use vec-permutation matrix spatial matrix population models. Ecological Modelling 188:15–21.","code":""},{"path":"https://aldridgecaleb.github.io/meta-pop-bio/reference/vec.perm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vec-permutation matrix — vec.perm","text":"","code":"# Peregrine falcon example from Hunter and Caswell (2005), data from Wootton # and Bell (1992).  # Define the number of patches and stages n_patches <- 2  # northern = 1x; southern = 2x n_stages <- 2  # juvenile = x1; adult = x2 group_by <- \"patches\"  # Construct vec-permutation matrix P <- vec.perm(n_stages, n_patches, group_by)"}]
